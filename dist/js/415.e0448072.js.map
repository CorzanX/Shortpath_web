{"version":3,"file":"js/415.e0448072.js","mappings":"2JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,KAAK,CAACF,EAAII,GAAG,sBAAsBF,EAAG,mBAAmB,CAACG,MAAM,CAAC,aAAe,IAAI,YAAc,IAAI,MAAQL,EAAIM,MAAM,MAAQN,EAAIO,SAASL,EAAG,IAAI,CAACF,EAAII,GAAG,oZAAoZF,EAAG,IAAI,CAACF,EAAII,GAAG,6WAA6WF,EAAG,IAAI,CAACF,EAAII,GAAG,+SAA+SF,EAAG,IAAI,CAACF,EAAII,GAAG,+CAA+CF,EAAG,IAAI,CAACM,YAAY,CAAC,cAAc,WAAW,cAAc,gBAAgB,CAACR,EAAII,GAAGJ,EAAIS,GAAGT,EAAIU,YAAY,EACn+C,EACIC,EAAkB,G,WCgDtB,GACAC,KAAA,oBACAC,WAAA,CACAC,iBAAAA,EAAAA,GAEAC,OACA,OACAL,OAAA,6LACAH,MAAA,CACA,CAAAS,GAAA,EAAAJ,KAAA,KACA,CAAAI,GAAA,EAAAJ,KAAA,KACA,CAAAI,GAAA,EAAAJ,KAAA,KACA,CAAAI,GAAA,EAAAJ,KAAA,KACA,CAAAI,GAAA,EAAAJ,KAAA,MAEAN,MAAA,CACA,CAAAW,OAAA,EAAAC,OAAA,EAAAC,OAAA,GACA,CAAAF,OAAA,EAAAC,OAAA,EAAAC,OAAA,GACA,CAAAF,OAAA,EAAAC,OAAA,EAAAC,OAAA,GACA,CAAAF,OAAA,EAAAC,OAAA,EAAAC,OAAA,GACA,CAAAF,OAAA,EAAAC,OAAA,EAAAC,OAAA,GACA,CAAAF,OAAA,EAAAC,OAAA,EAAAC,OAAA,IAKA,GC5EoQ,I,UCQhQC,GAAY,OACd,EACArB,EACAY,GACA,EACA,KACA,KACA,MAIF,EAAeS,EAAiB,O,wDCnBhC,IAAIrB,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACmB,IAAI,MAAMhB,MAAM,CAAC,MAAQL,EAAIsB,YAAY,OAAStB,EAAIuB,iBAC7I,EACIZ,EAAkB,G,UCOtB,GACAC,KAAA,mBACAY,MAAA,CACAjB,MAAA,CACAkB,KAAAC,MACAC,UAAA,GAEArB,MAAA,CACAmB,KAAAC,MACAC,UAAA,GAEAL,YAAAM,OACAL,aAAAK,QAEAC,UACA,KAAAC,WACA,EACAC,QAAA,CACAD,YAEA,KAAAE,WAAAC,EAAAA,IAAA,KAAA1B,OACA2B,MAAA,OAAAD,EAAAA,IAAA,KAAA3B,OAAAU,IAAAmB,GAAAA,EAAAnB,MACAkB,MAAA,SAAAD,EAAAA,MAAAG,UAAA,MACAF,MAAA,SAAAD,EAAAA,IAAA,KAAAX,YAAA,OAAAC,aAAA,IAGA,MAAAc,EAAAJ,EAAAA,GAAA,KAAAK,MAAAD,KAGA,KAAAE,KAAAF,EACAG,UAAA,QACAzB,KAAA,KAAAT,OACAmC,QACAC,OAAA,QACAC,KAAA,iBAIA,KAAAC,KAAAP,EACAG,UAAA,UACAzB,KAAA,KAAAR,OACAkC,QACAC,OAAA,UACAC,KAAA,QACAA,KAAA,oBACAE,KACAZ,EAAAA,MAEAa,GAAA,aAAAC,WACAD,GAAA,YAAAE,SACAF,GAAA,WAAAG,UAIA,KAAAC,MAAAb,EACAG,UAAA,MACAzB,KAAA,KAAAR,OACAkC,QACAC,OAAA,QACAC,KAAA,wBACAA,KAAA,oBACAA,KAAA,aACAQ,MAAAhB,GAAAA,EAAAvB,OAEA,KAAAwC,aAAAf,EACAG,UAAA,MACAzB,KAAA,KAAAT,OACAmC,QACAC,OAAA,QACAC,KAAA,wBACAA,KAAA,oBACAA,KAAA,aACAQ,MAAAhB,GAAAA,EAAAhB,SAGA,KAAAa,WAAAzB,MAAA,KAAAA,OAAAuC,GAAA,YAAAO,QACA,KAAArB,WAAAE,MAAA,QAAA5B,MAAA,KAAAA,MACA,EACA+C,SACA,KAAAd,KACAI,KAAA,MAAAR,GAAAA,EAAAlB,OAAAqC,IACAX,KAAA,MAAAR,GAAAA,EAAAlB,OAAAsC,IACAZ,KAAA,MAAAR,GAAAA,EAAAjB,OAAAoC,IACAX,KAAA,MAAAR,GAAAA,EAAAjB,OAAAqC,IACA,KAAAX,KACAD,KAAA,MAAAR,GAAAA,EAAAmB,IACAX,KAAA,MAAAR,GAAAA,EAAAoB,IACA,KAAAL,MACAP,KAAA,KAAAR,GAAAA,EAAAmB,IACAX,KAAA,KAAAR,GAAAA,EAAAoB,IACA,KAAAH,aACAT,KAAA,KAAAR,IAAAA,EAAAlB,OAAAqC,EAAAnB,EAAAjB,OAAAoC,GAAA,IACAX,KAAA,KAAAR,IAAAA,EAAAlB,OAAAsC,EAAApB,EAAAjB,OAAAqC,GAAA,GACA,EACAR,UAAAZ,GACAF,EAAAA,IAAAA,QAAA,KAAAD,WAAAwB,YAAA,IAAAC,UACAtB,EAAAuB,GAAAvB,EAAAmB,EACAnB,EAAAwB,GAAAxB,EAAAoB,CACA,EACAP,QAAAb,GACAA,EAAAmB,EAAArB,EAAAA,IAAAA,EACAE,EAAAoB,EAAAtB,EAAAA,IAAAA,CACA,EACAgB,QAAAd,GACAF,EAAAA,IAAAA,QAAA,KAAAD,WAAAwB,YAAA,GACArB,EAAAuB,GAAA,KACAvB,EAAAwB,GAAA,IACA,ICpHgQ,I,UCO5PvC,GAAY,OACd,EACArB,EACAY,GACA,EACA,KACA,KACA,MAIF,EAAeS,EAAiB,O","sources":["webpack://corzanx/./src/components/Data_Sructure/DS_graph_un.vue","webpack://corzanx/src/components/Data_Sructure/DS_graph_un.vue","webpack://corzanx/./src/components/Data_Sructure/DS_graph_un.vue?46bf","webpack://corzanx/./src/components/Data_Sructure/DS_graph_un.vue?246c","webpack://corzanx/./src/components/undirected_graph.vue","webpack://corzanx/src/components/undirected_graph.vue","webpack://corzanx/./src/components/undirected_graph.vue?0767","webpack://corzanx/./src/components/undirected_graph.vue?b938"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',[_vm._v(\"undirected Graph\")]),_c('undirected_graph',{attrs:{\"parentHeight\":200,\"parentWidth\":200,\"links\":_vm.links,\"nodes\":_vm.nodes}}),_c('p',[_vm._v(\"An undirected graph is a type of graph in which edges have no specific direction associated with them. The edges in an undirected graph are bidirectional and do not have any arrows indicating a particular direction. This means that the relationship between vertices is symmetrical, and there are two-way paths between nodes. In an undirected graph, the order of vertices in an edge does not matter.\")]),_c('p',[_vm._v(\"An adjacency matrix is a common method used in graph theory to represent a graph. For a given graph, an adjacency matrix is a two-dimensional matrix where the rows and columns represent the vertices (or nodes) of the graph. The elements of the adjacency matrix indicate whether there exists an edge or the weight of the edge between two vertices in the graph.\")]),_c('p',[_vm._v(\"In the case of an undirected graph, the adjacency matrix is a symmetric matrix. Non-zero elements indicate the presence of an edge between two vertices, while zero elements indicate the absence of an edge. If the graph is weighted, the non-zero elements typically represent the weight of the edge.\")]),_c('p',[_vm._v(\"For this example,the adjacency matrix is:\")]),_c('p',{staticStyle:{\"white-space\":\"pre-wrap\",\"font-family\":\"Courier New\"}},[_vm._v(_vm._s(_vm.martix))])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n      <h1>undirected Graph</h1>\n    <undirected_graph :parentHeight=\"200\" :parentWidth=\"200\" :links=\"links\" :nodes=\"nodes\"/>\n    <p>An undirected graph is a type of graph in which edges have no specific direction associated with them. The edges in an undirected graph are bidirectional and do not have any arrows indicating a particular direction. This means that the relationship between vertices is symmetrical, and there are two-way paths between nodes. In an undirected graph, the order of vertices in an edge does not matter.</p> \n    <p>An adjacency matrix is a common method used in graph theory to represent a graph. For a given graph, an adjacency matrix is a two-dimensional matrix where the rows and columns represent the vertices (or nodes) of the graph. The elements of the adjacency matrix indicate whether there exists an edge or the weight of the edge between two vertices in the graph.</p>\n    <p>In the case of an undirected graph, the adjacency matrix is a symmetric matrix. Non-zero elements indicate the presence of an edge between two vertices, while zero elements indicate the absence of an edge. If the graph is weighted, the non-zero elements typically represent the weight of the edge.</p>\n    <p>For this example,the adjacency matrix is:</p>\n    <p style=\"white-space: pre-line; white-space: pre-wrap; font-family: Courier New ;\">{{martix}}</p>\n    </div>\n</template>\n\n<style>\n    .el-header, .el-footer {\n      background-color: #B3C0D1;\n      color: #333;\n      text-align: center;\n      line-height: 60px;\n    }\n    \n    .el-aside {\n      background-color: #D3DCE6;\n      color: #333;\n      text-align: center;\n      line-height: 200px;\n    }\n    \n    .el-main {\n      background-color: #E9EEF3;\n      color: #333;\n\n    }\n    \n    body > .el-container {\n      margin-bottom: 40px;\n    }\n    \n    .el-container:nth-child(5) .el-aside,\n    .el-container:nth-child(6) .el-aside {\n      line-height: 260px;\n    }\n\n\n    .el-container:nth-child(7) .el-aside {\n      line-height: 320px;\n    }\n</style>\n\n<script>\n    import undirected_graph from '../undirected_graph.vue';\n    export default {\n      name : 'parent_undirected',\n      components:{\n        undirected_graph,\n      },\n        data() {\n          return {\n            martix : \"    A    B    C    D    E    \\nA   0    5    0    7    7    \\nB   5    0    3    0    0    \\nC   0    3    0    4    0    \\nD   7    0    4    0    6    \\nE   7    0    0    6    0    \\n\",\n            nodes: [\n          { id: 0, name: 'A' },\n          { id: 1, name: 'B' },\n          { id: 2, name: 'C' },\n          { id: 3, name: 'D' },\n          { id: 4, name: 'E' }\n          ],\n      links: [\n          { source: 0, target: 1 , weight: 5},\n          { source: 1, target: 2 , weight: 3},\n          { source: 2, target: 3 , weight: 4},\n          { source: 3, target: 4 , weight: 6},\n          { source: 4, target: 0 , weight: 7},\n          { source: 0, target: 3 , weight: 7}\n          \n        ],\n\n          }\n        }\n  }\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DS_graph_un.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DS_graph_un.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DS_graph_un.vue?vue&type=template&id=a551c30e&\"\nimport script from \"./DS_graph_un.vue?vue&type=script&lang=js&\"\nexport * from \"./DS_graph_un.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DS_graph_un.vue?vue&type=style&index=0&id=a551c30e&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('svg',{ref:\"svg\",attrs:{\"width\":_vm.parentWidth,\"height\":_vm.parentHeight}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <svg ref=\"svg\" :width=\"parentWidth\" :height=\"parentHeight\"></svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n    name: 'undirected_graph',\n  props: {\n    nodes: {\n      type: Array,\n      required: true,\n    },\n    links: {\n      type: Array,\n      required: true,\n    },\n    parentWidth: Number,\n    parentHeight: Number,\n  },\n  mounted() {\n    this.initGraph();\n  },\n  methods: {\n    initGraph() {\n      // 创建力导向布局算法\n      this.simulation = d3.forceSimulation(this.nodes)\n        .force(\"link\", d3.forceLink(this.links).id((d) => d.id))\n        .force(\"charge\", d3.forceManyBody().strength(-500))\n        .force(\"center\", d3.forceCenter(this.parentWidth / 2, this.parentHeight / 2));\n\n      // 创建SVG元素\n      const svg = d3.select(this.$refs.svg);\n\n      // 创建边\n      this.link = svg\n        .selectAll(\"line\")\n        .data(this.links)\n        .enter()\n        .append(\"line\")\n        .attr(\"stroke\", \"#999\")\n        \n      \n      // 创建节点\n      this.node = svg\n        .selectAll(\"circle\")\n        .data(this.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"r\", 20)\n        .attr(\"fill\", \"lightblue\")\n        .call(\n          d3\n            .drag()\n            .on(\"start\", this.dragstart)\n            .on(\"drag\", this.dragged)\n            .on(\"end\", this.dragend)\n        );\n\n        // 添加文本标签\n      this.label = svg\n        .selectAll(null)\n        .data(this.nodes)\n        .enter()\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"dy\", \"-0em\")\n        .text((d) => d.name);\n      \n      this.weight_label  = svg\n        .selectAll(null)\n        .data(this.links)\n        .enter()\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"dy\", \"-0em\")\n        .text((d) => d.weight);\n\n      // 将节点和边绑定到力导向布局\n      this.simulation.nodes(this.nodes).on(\"tick\", this.ticked);\n      this.simulation.force(\"link\").links(this.links);\n    },\n    ticked() {\n      this.link\n        .attr(\"x1\", (d) => d.source.x)\n        .attr(\"y1\", (d) => d.source.y)\n        .attr(\"x2\", (d) => d.target.x)\n        .attr(\"y2\", (d) => d.target.y);\n      this.node\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n      this.label\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n      this.weight_label\n        .attr('x',(d) => (d.source.x+d.target.x)/2.0)\n        .attr('y',(d) => (d.source.y+d.target.y)/2.0)\n    } ,\n    dragstart(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragged(d) {\n      d.x = d3.event.x;\n      d.y = d3.event.y;\n    },\n    dragend(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./undirected_graph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./undirected_graph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./undirected_graph.vue?vue&type=template&id=770dfd62&\"\nimport script from \"./undirected_graph.vue?vue&type=script&lang=js&\"\nexport * from \"./undirected_graph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_v","attrs","links","nodes","staticStyle","_s","martix","staticRenderFns","name","components","undirected_graph","data","id","source","target","weight","component","ref","parentWidth","parentHeight","props","type","Array","required","Number","mounted","initGraph","methods","simulation","d3","force","d","strength","svg","$refs","link","selectAll","enter","append","attr","node","call","on","dragstart","dragged","dragend","label","text","weight_label","ticked","x","y","alphaTarget","restart","fx","fy"],"sourceRoot":""}
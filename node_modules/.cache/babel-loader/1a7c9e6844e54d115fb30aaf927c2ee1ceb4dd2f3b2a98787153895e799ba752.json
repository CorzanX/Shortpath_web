{"ast":null,"code":"import oriented_Graph from '../oriented.vue';\nexport default {\n  name: 'parent_oriented',\n  components: {\n    oriented_Graph\n  },\n  data() {\n    return {\n      martix: \"    A    B    C    D    E    \\nA   0    5    0    7    0    \\nB   0    0    3    0    0    \\nC   0    0    0    4    0    \\nD   5    0    0    0    6    \\nE   7    0    0    0    0    \\n\",\n      nodes: [{\n        id: 0,\n        name: 'A'\n      }, {\n        id: 1,\n        name: 'B'\n      }, {\n        id: 2,\n        name: 'C'\n      }, {\n        id: 3,\n        name: 'D'\n      }, {\n        id: 4,\n        name: 'E'\n      }],\n      links: [{\n        source: 0,\n        target: 1,\n        weight: 5\n      }, {\n        source: 1,\n        target: 2,\n        weight: 3\n      }, {\n        source: 2,\n        target: 3,\n        weight: 4\n      }, {\n        source: 3,\n        target: 4,\n        weight: 6\n      }, {\n        source: 4,\n        target: 0,\n        weight: 7\n      }, {\n        source: 0,\n        target: 3,\n        weight: 7\n      }, {\n        source: 3,\n        target: 0,\n        weight: 5\n      }]\n    };\n  }\n};","map":{"version":3,"names":["oriented_Graph","name","components","data","martix","nodes","id","links","source","target","weight"],"sources":["src/components/Data_Sructure/DS_graph_or.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Directed Graph</h1>\n    <oriented_Graph :parentHeight=\"200\" :parentWidth=\"200\" :links=\"links\" :nodes=\"nodes\"/>\n    <p>A directed graph, also known as a digraph, is a type of graph in which edges have a specific direction associated with them. Each edge in a directed graph has an arrow indicating the direction from one vertex (node) to another. This means that the relationship between vertices is asymmetrical, and there may be one-way paths between nodes. In a directed graph, the order of vertices in an edge matters.\n    <p>An adjacency matrix is a common method used in graph theory to represent a graph. For a given graph, an adjacency matrix is a two-dimensional matrix where the rows and columns represent the vertices (or nodes) of the graph. The elements of the adjacency matrix indicate whether there exists an edge or the weight of the edge between two vertices in the graph.</p>\n    <p>In the case of a directed graph, the adjacency matrix is not necessarily symmetric. The matrix element a[i][j] represents whether there is a directed edge from vertex i to vertex j. It can be represented as 1 if an edge exists or can use weight values to represent the edge's weight. If there is no edge, it can be represented as 0 or any other special value.</p>\n    <p>For this example,the adjacency matrix is:</p>\n    <p style=\"white-space: pre-line; white-space: pre-wrap; font-family: Courier New ;\">{{martix}}</p>\n         \n    </div>\n</template>\n\n\n<script>\n    import oriented_Graph from '../oriented.vue';\n    export default {\n      name : 'parent_oriented',\n      components:{\n        oriented_Graph\n      },\n        data() {\n          return {\n          martix: \"    A    B    C    D    E    \\nA   0    5    0    7    0    \\nB   0    0    3    0    0    \\nC   0    0    0    4    0    \\nD   5    0    0    0    6    \\nE   7    0    0    0    0    \\n\",\n         nodes: [\n          { id: 0, name: 'A' },\n          { id: 1, name: 'B' },\n          { id: 2, name: 'C' },\n          { id: 3, name: 'D' },\n          { id: 4, name: 'E' }\n          ],\n      links: [\n          { source: 0, target: 1 , weight: 5},\n          { source: 1, target: 2 , weight: 3},\n          { source: 2, target: 3 , weight: 4},\n          { source: 3, target: 4 , weight: 6},\n          { source: 4, target: 0 , weight: 7},\n          { source: 0, target: 3 , weight: 7},\n          { source: 3, target: 0 , weight: 5}\n          \n        ],\n\n          }\n        }\n  }\n</script>"],"mappings":"AAeA,OAAAA,cAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,MAAA;MACAC,KAAA,GACA;QAAAC,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,EACA;MACAM,KAAA,GACA;QAAAC,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA;IAIA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
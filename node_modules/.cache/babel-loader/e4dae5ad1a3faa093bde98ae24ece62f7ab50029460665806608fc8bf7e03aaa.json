{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  name: 'GraphComponent',\n  props: {\n    shortestPath: {\n      type: Array,\n      default: () => ['A', 'B', 'C']\n    }\n  },\n  mounted() {\n    this.drawGraph(this.shortestPath);\n  },\n  methods: {\n    drawGraph(shortestPath) {\n      // 添加D3.js代码以创建图形，并使用 shortestPath 高亮路径\n      // 例如，可以选择一个包含所有节点的DOM元素，并使用D3.js添加SVG元素和路径元素\n      const nodes = ['A', 'B', 'C', 'D', 'E'];\n      const links = [{\n        source: 'A',\n        target: 'B'\n      }, {\n        source: 'A',\n        target: 'C'\n      }, {\n        source: 'B',\n        target: 'D'\n      }, {\n        source: 'C',\n        target: 'D'\n      }, {\n        source: 'C',\n        target: 'E'\n      }, {\n        source: 'D',\n        target: 'E'\n      }];\n      const svg = d3.select('#chart').append('svg').attr('width', 500).attr('height', 500);\n      svg.selectAll('circle').data(nodes).enter().append('circle').attr('cx', (d, i) => (i + 1) * 100).attr('cy', 250).attr('r', 20).attr('stroke', 'black').attr('fill', 'white');\n      svg.selectAll('line').data(links).enter().append('line').attr('x1', d => (nodes.indexOf(d.source) + 1) * 100).attr('y1', 250).attr('x2', d => (nodes.indexOf(d.target) + 1) * 100).attr('y2', 250).attr('stroke', 'black');\n      svg.selectAll('text').data(nodes).enter().append('text').text(d => d).attr('x', (d, i) => (i + 1) * 100).attr('y', 280).attr('text-anchor', 'middle').attr('fill', 'black');\n      svg.selectAll('line.highlight').data(shortestPath.slice(1)).enter().append('line').attr('x1', d => (nodes.indexOf(d) + 1) * 100 - 15).attr('y1', 235).attr('x2', d => (nodes.indexOf(d) + 1) * 100 + 15).attr('y2', 265).attr('stroke', 'red').attr('stroke-width', 5).attr('class', 'highlight');\n    }\n  }\n};","map":{"version":3,"names":["d3","name","props","shortestPath","type","Array","default","mounted","drawGraph","methods","nodes","links","source","target","svg","select","append","attr","selectAll","data","enter","d","i","indexOf","text","slice"],"sources":["src/components/AlgIntro.vue"],"sourcesContent":["<template>\n  <div>\n      <el-container>\n          <el-container>\n            <el-aside width=\"200px\">\n              <el-menu :default-openeds=\"['1']\">\n                  <el-submenu index=\"1\">\n                    <template slot=\"title\"><i class=\"el-icon-message\"></i>Linear structure</template>\n                    <el-menu-item-group>\n                      <el-submenu index=\"1-1\">\n                        <template slot=\"title\">list</template>\n                        <el-menu-item index=\"1-1-1\">list reverse</el-menu-item>\n                        <el-menu-item index=\"1-1-2\">list merge</el-menu-item>\n                      </el-submenu>\n                      <el-submenu index=\"1-2\">\n                        <template slot=\"title\">queue</template>\n                        <el-menu-item index=\"1-2-1\">queue class</el-menu-item>\n                        <el-menu-item index=\"1-2-2\">Pascal's Triangle</el-menu-item>\n                      </el-submenu>\n                      <el-submenu index=\"1-3\">\n                        <template slot=\"title\">stack</template>\n                        <el-menu-item index=\"1-3-1\">stack class</el-menu-item>\n                        <el-menu-item index=\"1-3-2\">Analog computer</el-menu-item>\n                      </el-submenu>\n                    </el-menu-item-group>\n                  </el-submenu>\n                  <el-submenu index=\"2\">\n                    <template slot=\"title\"><i class=\"el-icon-menu\"></i>Tree structure</template>\n                    <el-menu-item-group>\n                      <el-submenu index=\"2-1\">\n                        <template slot=\"title\">Binary tree</template>\n                        <el-menu-item index=\"2-1-1\">Traversal</el-menu-item>\n                        <el-menu-item index=\"2-1-2\">BST</el-menu-item>\n                        <el-menu-item index=\"2-1-3\">heap</el-menu-item>\n                      </el-submenu>\n                      <el-submenu index=\"2-2\">\n                        <template slot=\"title\">other trees</template>\n                        <el-menu-item index=\"2-2-1\">Trie tree</el-menu-item>\n                        <el-menu-item index=\"2-3-1\">B tree</el-menu-item>\n                        <el-menu-item index=\"2-4-1\">B+ tree</el-menu-item>\n                      </el-submenu>\n                    </el-menu-item-group>\n                    \n                  </el-submenu>\n                  <el-submenu index=\"3\">\n                    <template slot=\"title\"><i class=\"el-icon-setting\"></i>Gragh</template>\n                    <el-menu-item-group>\n                      <el-submenu index=\"3-1\">\n                        <template slot=\"title\">Search</template>\n                        <el-menu-item index=\"3-1-1\">DFS</el-menu-item>\n                        <el-menu-item index=\"3-1-2\">BFS</el-menu-item>\n                      </el-submenu>\n                      <el-submenu index=\"3-2\">\n                        <template slot=\"title\">Minimum Spanning Tree</template>\n                        <el-menu-item index=\"3-2-1\">Kruskal</el-menu-item>\n                        <el-menu-item index=\"3-2-2\">Prime</el-menu-item>\n                      </el-submenu>\n                      <el-submenu index=\"3-3\">\n                        <template slot=\"title\">Shortest Path</template>\n                        <el-menu-item index=\"3-3-1\">Dijkstra</el-menu-item>\n                        <el-menu-item index=\"3-3-2\">Floyd</el-menu-item>\n                        <el-menu-item index=\"3-3-3\">SPFA</el-menu-item>\n                        <el-menu-item index=\"3-3-4\">Bellman-Ford</el-menu-item>\n                      </el-submenu>\n                    </el-menu-item-group>\n                  </el-submenu>\n                </el-menu>\n            </el-aside>\n            <el-container>\n              <el-main >\n                  <div id=\"chart\"></div>\n              </el-main>\n            </el-container>\n          </el-container>\n        </el-container>          \n  </div>\n</template>\n\n<style>\n  .el-header, .el-footer {\n    background-color: #B3C0D1;\n    color: #333;\n    text-align: center;\n    line-height: 60px;\n  }\n  \n  .el-aside {\n    background-color: #D3DCE6;\n    color: #333;\n    text-align: center;\n    line-height: 200px;\n  }\n  \n  .el-main {\n    background-color: #E9EEF3;\n    color: #333;\n    text-align: center;\n  }\n  \n  body > .el-container {\n    margin-bottom: 40px;\n  }\n  \n  .el-container:nth-child(5) .el-aside,\n  .el-container:nth-child(6) .el-aside {\n    line-height: 260px;\n  }\n\n\n  .el-container:nth-child(7) .el-aside {\n    line-height: 320px;\n  }\n</style>\n\n<script>\n  import * as d3 from 'd3'\n  export default {\n    name: 'GraphComponent',\n    props: {\n      shortestPath: {\n        type: Array,\n        default: () => ['A','B','C']\n      }\n    },\n    mounted() {\n      this.drawGraph(this.shortestPath);\n    },\n    methods: {\n      drawGraph(shortestPath) {\n      // 添加D3.js代码以创建图形，并使用 shortestPath 高亮路径\n      // 例如，可以选择一个包含所有节点的DOM元素，并使用D3.js添加SVG元素和路径元素\n      const nodes = ['A', 'B', 'C', 'D', 'E'];\n      const links = [\n        { source: 'A', target: 'B' },\n        { source: 'A', target: 'C' },\n        { source: 'B', target: 'D' },\n        { source: 'C', target: 'D' },\n        { source: 'C', target: 'E' },\n        { source: 'D', target: 'E' }\n      ];\n      const svg = d3.select('#chart')\n        .append('svg')\n        .attr('width', 500)\n        .attr('height', 500);\n\n      svg.selectAll('circle')\n        .data(nodes)\n        .enter()\n        .append('circle')\n        .attr('cx', (d, i) => (i + 1) * 100)\n        .attr('cy', 250)\n        .attr('r', 20)\n        .attr('stroke', 'black')\n        .attr('fill', 'white');\n        svg.selectAll('line')\n        .data(links)\n        .enter()\n        .append('line')\n        .attr('x1', d => (nodes.indexOf(d.source) + 1) * 100)\n        .attr('y1', 250)\n        .attr('x2', d => (nodes.indexOf(d.target) + 1) * 100)\n        .attr('y2', 250)\n        .attr('stroke', 'black');\n\n      svg.selectAll('text')\n        .data(nodes)\n        .enter()\n        .append('text')\n        .text(d => d)\n        .attr('x', (d, i) => (i + 1) * 100)\n        .attr('y', 280)\n        .attr('text-anchor', 'middle')\n        .attr('fill', 'black');\n        svg.selectAll('line.highlight')\n        .data(shortestPath.slice(1))\n        .enter()\n        .append('line')\n        .attr('x1', d => (nodes.indexOf(d) + 1) * 100 - 15)\n        .attr('y1', 235)\n        .attr('x2', d => (nodes.indexOf(d) + 1) * 100 + 15)\n        .attr('y2', 265)\n        .attr('stroke', 'red')\n        .attr('stroke-width', 5)\n        .attr('class', 'highlight');\n    }\n    },\n  };\n</script>"],"mappings":"AAmHA,YAAAA,EAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,YAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA,MAAAL,YAAA;EACA;EACAM,OAAA;IACAD,UAAAL,YAAA;MACA;MACA;MACA,MAAAO,KAAA;MACA,MAAAC,KAAA,IACA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAD,MAAA;QAAAC,MAAA;MAAA,EACA;MACA,MAAAC,GAAA,GAAAd,EAAA,CAAAe,MAAA,WACAC,MAAA,QACAC,IAAA,eACAA,IAAA;MAEAH,GAAA,CAAAI,SAAA,WACAC,IAAA,CAAAT,KAAA,EACAU,KAAA,GACAJ,MAAA,WACAC,IAAA,QAAAI,CAAA,EAAAC,CAAA,MAAAA,CAAA,aACAL,IAAA,YACAA,IAAA,UACAA,IAAA,oBACAA,IAAA;MACAH,GAAA,CAAAI,SAAA,SACAC,IAAA,CAAAR,KAAA,EACAS,KAAA,GACAJ,MAAA,SACAC,IAAA,OAAAI,CAAA,KAAAX,KAAA,CAAAa,OAAA,CAAAF,CAAA,CAAAT,MAAA,cACAK,IAAA,YACAA,IAAA,OAAAI,CAAA,KAAAX,KAAA,CAAAa,OAAA,CAAAF,CAAA,CAAAR,MAAA,cACAI,IAAA,YACAA,IAAA;MAEAH,GAAA,CAAAI,SAAA,SACAC,IAAA,CAAAT,KAAA,EACAU,KAAA,GACAJ,MAAA,SACAQ,IAAA,CAAAH,CAAA,IAAAA,CAAA,EACAJ,IAAA,OAAAI,CAAA,EAAAC,CAAA,MAAAA,CAAA,aACAL,IAAA,WACAA,IAAA,0BACAA,IAAA;MACAH,GAAA,CAAAI,SAAA,mBACAC,IAAA,CAAAhB,YAAA,CAAAsB,KAAA,KACAL,KAAA,GACAJ,MAAA,SACAC,IAAA,OAAAI,CAAA,KAAAX,KAAA,CAAAa,OAAA,CAAAF,CAAA,mBACAJ,IAAA,YACAA,IAAA,OAAAI,CAAA,KAAAX,KAAA,CAAAa,OAAA,CAAAF,CAAA,mBACAJ,IAAA,YACAA,IAAA,kBACAA,IAAA,oBACAA,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
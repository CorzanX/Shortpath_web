{"ast":null,"code":"import step1 from './dij/step1.vue';\nimport step2 from './dij/step2.vue';\nimport step3 from './dij/step3.vue';\nimport step4 from './dij/step4.vue';\nimport step5 from './dij/step5.vue';\nimport step6 from './dij/step6.vue';\nimport step7 from './dij/step7.vue';\nexport default {\n  components: {\n    step1,\n    step2,\n    step3,\n    step4,\n    step5,\n    step6,\n    step7\n  }\n};","map":{"version":3,"names":["step1","step2","step3","step4","step5","step6","step7","components"],"sources":["src/components/Introduction/AlgIntro_dij.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Dijkstra</h1>\n        <p>Dijkstra's algorithm is a graph traversal algorithm that is used to find the shortest path between a starting node and all other nodes in a weighted graph.  It was developed by Dutch computer scientist Edsger W. Dijkstra in 1956.</p>\n        <p>Dijkstra algorithm is used to find the shortest path from one vertex to all other vertices in the graph. It is suitable for both unweighted graphs and directed weighted graphs.</p>\n        <p>Note that when using Dijkstra algorithm to find the shortest path, the weights of all edges in the graph must be guaranteed to be non-negative, otherwise the search process is easy to make mistakes.</p>\n        <h2>The realization of Dijkstra algorithm</h2>\n        <img src=\"../../assets/dij.gif\"><br>\n        First of all, we can set up two sets, A and B.\n        <p style=\"color: red\">A is used to store the points where the shortest path has been calculated, and B is used to store the points where the shortest path has not been calculated.</p>\n        So let's do this at any point on the graph, and let's say we choose source at 0. So the distance from all the initial points to 0 we're going to assume is ∞, which means unreachable. The distance from source point 0 to itself is 0, and the initialization is as follows: Then set A is: {0}, set B is: {1,2,3,4,5,6}\n        \n        <table>\n            <tr class=\"blue-row\">\n                <td>Vertex number</td>\n                <td>Distance to source</td>\n            </tr>\n            <tr class=\"green-row\">\n                <td>0</td>\n                <td>0</td>\n            </tr>\n            <tr>\n                <td>1</td>\n                <td>∞</td>\n            </tr>\n            <tr>\n                <td>2</td>\n                <td>∞</td>\n            </tr>\n            <tr>\n                <td>3</td>\n                <td>∞</td>\n            </tr>\n            <tr>\n                <td>4</td>\n                <td>∞</td>\n            </tr>\n            <tr>\n                <td>5</td>\n                <td>∞</td>\n            </tr>\n            <tr>\n                <td>6</td>\n                <td>∞</td>\n            </tr>\n        </table>\n\n        <step1/>\n        <step2/>\n        <step3/>\n        <step4/>\n        <step5/>\n        <step6/>\n        <step7/>\n    </div>\n</template>\n\n<script>\n    import step1 from './dij/step1.vue'\n    import step2 from './dij/step2.vue'\n    import step3 from './dij/step3.vue'\n    import step4 from './dij/step4.vue'\n    import step5 from './dij/step5.vue'\n    import step6 from './dij/step6.vue'\n    import step7 from './dij/step7.vue'\n    export default {\n        components:{\n            step1,\n            step2,\n            step3,\n            step4,\n            step5,\n            step6,\n            step7\n        },\n    }\n</script>\n\n\n<style scoped>\n    h1{\n        font-size: 30px;\n    }\n    h2{\n        font-size: 20px;\n    }\n    h3{\n        font-size: 17px;\n    }\n    table {\n        border-collapse: collapse; \n        width: 50%;\n    }\n    th, td {\n        border: 1px solid black;\n        padding: 8px; \n        text-align: center;\n    }\n    .blue-row {\n        background-color: lightblue; /* 设置蓝色背景 */\n    }\n    .green-row {\n        background-color: lightgreen; /* 设置蓝色背景 */\n    }\n    .red-border td {\n        border: 3px solid red ;\n    }\n</style>"],"mappings":"AA0DA,OAAAA,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AACA;EACAC,UAAA;IACAP,KAAA;IACAC,KAAA;IACAC,KAAA;IACAC,KAAA;IACAC,KAAA;IACAC,KAAA;IACAC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
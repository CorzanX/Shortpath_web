{"ast":null,"code":"export default {\n  data() {\n    return {\n      code: `\ndef dijkstra(graph: List[List[Tuple[int, int]]], source: int) -> List[int]:\n    num_vertices = len(graph)\n    distances = [INF] * num_vertices\n    distances[source] = 0\n\n    pq = [(0, source)]\n\n    while pq:\n        dist, u = heapq.heappop(pq)\n\n        if dist > distances[u]:\n            continue\n\n        for v, weight in graph[u]:\n            if distances[v] > distances[u] + weight:\n                distances[v] = distances[u] + weight\n                heapq.heappush(pq, (distances[v], v))\n\n    return distances\n\n            `\n    };\n  }\n};","map":{"version":3,"names":["data","code"],"sources":["src/components/Introduction/dij/dij_python.vue"],"sourcesContent":["<template>\n    <div>\n        <pre v-highlightA>\n            <code class=\"python\">\n                {{code}}\n            </code>\n        </pre>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data(){\n        return {\ncode:`\ndef dijkstra(graph: List[List[Tuple[int, int]]], source: int) -> List[int]:\n    num_vertices = len(graph)\n    distances = [INF] * num_vertices\n    distances[source] = 0\n\n    pq = [(0, source)]\n\n    while pq:\n        dist, u = heapq.heappop(pq)\n\n        if dist > distances[u]:\n            continue\n\n        for v, weight in graph[u]:\n            if distances[v] > distances[u] + weight:\n                distances[v] = distances[u] + weight\n                heapq.heappush(pq, (distances[v], v))\n\n    return distances\n\n            `\n        }\n    }\n}\n</script>\n\n<style scoped>\npre {\n  background-color: #f4f4f4;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-family: Consolas, Monaco, 'Andale Mono', monospace;\n  font-size: 14px;\n}\n\ncode {\n  font-family: Consolas, Monaco, 'Andale Mono', monospace;\n  font-size: 14px;\n}\n\n</style>"],"mappings":"AAYA;EACAA,KAAA;IACA;MACAC,IAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
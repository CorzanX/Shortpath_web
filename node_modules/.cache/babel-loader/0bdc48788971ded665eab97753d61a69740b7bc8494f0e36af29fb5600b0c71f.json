{"ast":null,"code":"(() => {\n  \"use strict\";\n\n  var e = {\n      d: (a, n) => {\n        for (var t in n) e.o(n, t) && !e.o(a, t) && Object.defineProperty(a, t, {\n          enumerable: !0,\n          get: n[t]\n        });\n      },\n      o: (e, a) => Object.prototype.hasOwnProperty.call(e, a),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    a = {};\n  e.r(a), e.d(a, {\n    default: () => n\n  });\n  const n = \"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";\n  module.exports = a;\n})();","map":{"version":3,"names":["e","d","a","n","t","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","default","module","exports"],"sources":["/Users/corzanx77/Desktop/Vue代码/router-demo/node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js"],"sourcesContent":["(()=>{\"use strict\";var e={d:(a,n)=>{for(var t in n)e.o(n,t)&&!e.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:n[t]})},o:(e,a)=>Object.prototype.hasOwnProperty.call(e,a),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},a={};e.r(a),e.d(a,{default:()=>n});const n=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=a})();"],"mappings":"AAAA,CAAC,MAAI;EAAC,YAAY;;EAAC,IAAIA,CAAC,GAAC;MAACC,CAAC,EAACA,CAACC,CAAC,EAACC,CAAC,KAAG;QAAC,KAAI,IAAIC,CAAC,IAAID,CAAC,EAACH,CAAC,CAACK,CAAC,CAACF,CAAC,EAACC,CAAC,CAAC,IAAE,CAACJ,CAAC,CAACK,CAAC,CAACH,CAAC,EAACE,CAAC,CAAC,IAAEE,MAAM,CAACC,cAAc,CAACL,CAAC,EAACE,CAAC,EAAC;UAACI,UAAU,EAAC,CAAC,CAAC;UAACC,GAAG,EAACN,CAAC,CAACC,CAAC;QAAC,CAAC,CAAC;MAAA,CAAC;MAACC,CAAC,EAACA,CAACL,CAAC,EAACE,CAAC,KAAGI,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACZ,CAAC,EAACE,CAAC,CAAC;MAACW,CAAC,EAACb,CAAC,IAAE;QAAC,WAAW,IAAE,OAAOc,MAAM,IAAEA,MAAM,CAACC,WAAW,IAAET,MAAM,CAACC,cAAc,CAACP,CAAC,EAACc,MAAM,CAACC,WAAW,EAAC;UAACC,KAAK,EAAC;QAAQ,CAAC,CAAC,EAACV,MAAM,CAACC,cAAc,CAACP,CAAC,EAAC,YAAY,EAAC;UAACgB,KAAK,EAAC,CAAC;QAAC,CAAC,CAAC;MAAA;IAAC,CAAC;IAACd,CAAC,GAAC,CAAC,CAAC;EAACF,CAAC,CAACa,CAAC,CAACX,CAAC,CAAC,EAACF,CAAC,CAACC,CAAC,CAACC,CAAC,EAAC;IAACe,OAAO,EAACA,CAAA,KAAId;EAAC,CAAC,CAAC;EAAC,MAAMA,CAAC,GAAC,i5DAAi5D;EAACe,MAAM,CAACC,OAAO,GAACjB,CAAC;AAAA,CAAC,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}
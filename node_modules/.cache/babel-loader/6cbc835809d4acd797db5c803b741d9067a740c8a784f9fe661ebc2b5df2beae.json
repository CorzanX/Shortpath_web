{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    links: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.drawGraph();\n  },\n  methods: {\n    drawGraph() {\n      const svg = d3.select(this.$refs.graph);\n      const simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      })).force(\"charge\", d3.forceManyBody().strength(-500)).force(\"center\", d3.forceCenter(svg.attr(\"width\") / 2, svg.attr(\"height\") / 2));\n      const link = svg.append(\"g\").selectAll(\"line\").data(this.links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"stroke\", \"#999\").style(\"stroke-width\", \"2px\");\n      const node = svg.append(\"g\").selectAll(\"circle\").data(this.nodes).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"r\", 15).attr(\"fill\", \"lightblue\").call(d3.drag().on(\"start\", dragstart).on(\"drag\", dragged).on(\"end\", dragend));\n\n      // 添加文本标签\n      const label = svg.append(\"g\").selectAll(null).data(this.nodes).enter().append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"dy\", \"-0em\").text(d => d.name);\n      const weight_label = svg.append(\"g\").selectAll(null).data(this.links).enter().append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"dy\", \"-0em\").text(d => d.weight);\n      function update() {\n        node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n        label.attr('x', d => d.x).attr('y', d => d.y);\n        weight_label.attr('x', d => d.source.x * 0.3 + d.target.x * 0.7).attr('y', d => (d.source.y + d.target.y) / 2.0);\n      }\n      simulation.nodes(this.nodes).on(\"tick\", update);\n      simulation.force(\"link\").links(this.links);\n      svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 20).attr(\"refY\", 0).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"class\", \"arrow\");\n      link.attr(\"marker-end\", \"url(#arrow)\");\n      function dragstart(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      function dragged(d) {\n        d.x = d3.event.x;\n        d.y = d3.event.y;\n      }\n      function dragend(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["d3","props","nodes","type","Array","required","links","mounted","drawGraph","methods","svg","select","$refs","graph","simulation","forceSimulation","force","forceLink","id","d","forceManyBody","strength","forceCenter","attr","link","append","selectAll","data","enter","style","node","call","drag","on","dragstart","dragged","dragend","label","text","name","weight_label","weight","update","x","y","source","target","event","active","alphaTarget","restart","fx","fy"],"sources":["src/components/oriented.vue"],"sourcesContent":["<template>\n  <div>\n    <svg ref=\"graph\" width=\"200\" height=\"200\"></svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  props: {\n    nodes: {\n      type: Array,\n      required: true,\n    },\n    links: {\n      type: Array,\n      required: true,\n    }\n  },\n  mounted() {\n    this.drawGraph();\n  },\n  methods: {\n    drawGraph() {\n      const svg = d3.select(this.$refs.graph);\n\n      const simulation = d3.forceSimulation()\n        .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n        .force(\"charge\", d3.forceManyBody().strength(-500))\n        .force(\"center\", d3.forceCenter(svg.attr(\"width\") / 2, svg.attr(\"height\") / 2));\n\n      \n\n      const link = svg.append(\"g\")\n        .selectAll(\"line\")\n        .data(this.links)\n        .enter().append(\"line\")\n        .attr(\"class\", \"link\")\n        .attr(\"stroke\", \"#999\")\n        .style(\"stroke-width\", \"2px\");\n\n      const node = svg.append(\"g\")\n        .selectAll(\"circle\")\n        .data(this.nodes)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 15)\n        .attr(\"fill\", \"lightblue\")\n        .call(\n          d3\n            .drag()\n            .on(\"start\", dragstart)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragend)\n        );\n\n        // 添加文本标签\n      const label = svg.append(\"g\")\n        .selectAll(null)\n        .data(this.nodes)\n        .enter()\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"dy\", \"-0em\")\n        .text((d) => d.name);\n\n      const weight_label = svg.append(\"g\")\n        .selectAll(null)\n        .data(this.links)\n        .enter()\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"dy\", \"-0em\")\n        .text((d) => d.weight);\n      \n      function update() {\n        node.attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => d.y);\n\n        link.attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n        label\n          .attr('x', d => d.x)\n          .attr('y', d => d.y);\n\n        weight_label\n          .attr('x',(d) => d.source.x*0.3+d.target.x*0.7)\n          .attr('y',(d) => (d.source.y+d.target.y)/2.0);\n      }\n\n      simulation.nodes(this.nodes).on(\"tick\", update);\n      simulation.force(\"link\").links(this.links);\n\n      svg.append(\"defs\").append(\"marker\")\n        .attr(\"id\", \"arrow\")\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 20)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .attr(\"d\", \"M0,-5L10,0L0,5\")\n        .attr(\"class\", \"arrow\");\n\n      link.attr(\"marker-end\", \"url(#arrow)\");\n      function dragstart(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      function dragged(d) {\n        d.x = d3.event.x;\n        d.y = d3.event.y;\n      }\n      function dragend(d) {\n        if (!d3.event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n  }\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
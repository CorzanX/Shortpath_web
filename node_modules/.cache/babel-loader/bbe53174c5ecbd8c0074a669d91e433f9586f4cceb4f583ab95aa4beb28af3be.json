{"ast":null,"code":"import * as d3 from 'd3';\nimport undirected_graph from '../undirected_graph.vue';\nexport default {\n  components: {\n    undirected_graph\n  },\n  data() {\n    return {\n      showDiv: true,\n      nodes: [{\n        id: 0,\n        name: 'A'\n      }, {\n        id: 1,\n        name: 'B'\n      }, {\n        id: 2,\n        name: 'C'\n      }, {\n        id: 3,\n        name: 'D'\n      }, {\n        id: 4,\n        name: 'E'\n      }],\n      links: [{\n        source: 0,\n        target: 1,\n        weight: 5\n      }, {\n        source: 1,\n        target: 2,\n        weight: 3\n      }, {\n        source: 2,\n        target: 3,\n        weight: 4\n      }, {\n        source: 3,\n        target: 4,\n        weight: 6\n      }, {\n        source: 4,\n        target: 0,\n        weight: 7\n      }, {\n        source: 0,\n        target: 3,\n        weight: 7\n      }],\n      simulation: null,\n      link: null,\n      node: null,\n      label: null\n    };\n  },\n  mounted() {},\n  methods: {\n    handleMenuItemClick() {\n      this.showDiv = false;\n    },\n    clearMainContent() {\n      this.$refs.elMain.innerHTML = '';\n    }\n  }\n};","map":{"version":3,"names":["d3","undirected_graph","components","data","showDiv","nodes","id","name","links","source","target","weight","simulation","link","node","label","mounted","methods","handleMenuItemClick","clearMainContent","$refs","elMain","innerHTML"],"sources":["src/components/Introduction/AlgIntro.vue"],"sourcesContent":["<template>\n  <div>\n      <el-container>\n          <el-container>\n            <el-aside width=\"200px\">\n              <el-menu :default-openeds=\"['1']\" router>\n                  <el-submenu index=\"1\">\n                    <template slot=\"title\"><i class=\"el-icon-s-grid\"></i>Gragh</template>\n                    <el-menu-item-group>\n                      <template slot=\"title\">Shortest Path</template>\n                      <el-menu-item index=\"1-1\" route=\"/algintro/dij\" @click=\"handleMenuItemClick\">Dijkstra</el-menu-item>\n                      <el-menu-item index=\"1-2\" route=\"/algintro/fly\" @click=\"handleMenuItemClick\">Floyd</el-menu-item>\n                      <el-menu-item index=\"1-3\" route=\"/algintro/SPFA\" @click=\"handleMenuItemClick\">SPFA</el-menu-item>\n                      <el-menu-item index=\"1-4\" route=\"/algintro/bf\" @click=\"handleMenuItemClick\">Bellman-Ford</el-menu-item>\n                    </el-menu-item-group>\n                  </el-submenu>\n                </el-menu>\n            </el-aside>\n            <el-container>\n              <el-main>\n                <router-view></router-view>\n                <div v-if=\"showDiv\">\n                  <undirected_graph :parentHeight=\"200\" :parentWidth=\"200\" :links=\"links\" :nodes=\"nodes\"/>\n                  <h1>How do we find the shortest path between two points? </h1>\n                </div>\n              </el-main>\n            </el-container>\n          </el-container>\n        </el-container>          \n  </div>\n</template>\n\n<style>\n  .el-header, .el-footer {\n    background-color: #B3C0D1;\n    color: #333;\n    text-align: center;\n    line-height: 60px;\n  }\n  \n  .el-aside {\n    background-color: #D3DCE6;\n    color: #333;\n    text-align: center;\n    line-height: 200px;\n  }\n  \n  .el-main {\n    background-color: #E9EEF3;\n    color: #333;\n    \n  }\n  \n  body > .el-container {\n    margin-bottom: 40px;\n  }\n  \n  .el-container:nth-child(5) .el-aside,\n  .el-container:nth-child(6) .el-aside {\n    line-height: 260px;\n  }\n\n\n  .el-container:nth-child(7) .el-aside {\n    line-height: 320px;\n  }\n</style>\n\n<script>\n  import * as d3 from 'd3';\n  import undirected_graph from '../undirected_graph.vue';\n  export default {\n    components:{\n        undirected_graph,\n      },\n    data() {\n    return {\n      showDiv: true,\n      nodes: [\n          { id: 0, name: 'A' },\n          { id: 1, name: 'B' },\n          { id: 2, name: 'C' },\n          { id: 3, name: 'D' },\n          { id: 4, name: 'E' }\n          ],\n      links: [\n          { source: 0, target: 1 , weight: 5},\n          { source: 1, target: 2 , weight: 3},\n          { source: 2, target: 3 , weight: 4},\n          { source: 3, target: 4 , weight: 6},\n          { source: 4, target: 0 , weight: 7},\n          { source: 0, target: 3 , weight: 7}\n        ],\n      simulation: null,\n      link: null,\n      node: null,\n      label: null,\n    };\n  },\n  mounted() {\n\n  },\n  methods: {\n    handleMenuItemClick() {\n      this.showDiv = false;\n    },\n    \n    clearMainContent() {\n      this.$refs.elMain.innerHTML = '';\n    },\n    \n    }\n  }\n  \n\n</script>"],"mappings":"AAqEA,YAAAA,EAAA;AACA,OAAAC,gBAAA;AACA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,OAAA;MACAC,KAAA,GACA;QAAAC,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA,EACA;MACAC,KAAA,GACA;QAAAC,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,GACA;QAAAF,MAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA,EACA;MACAC,UAAA;MACAC,IAAA;MACAC,IAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,oBAAA;MACA,KAAAd,OAAA;IACA;IAEAe,iBAAA;MACA,KAAAC,KAAA,CAAAC,MAAA,CAAAC,SAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
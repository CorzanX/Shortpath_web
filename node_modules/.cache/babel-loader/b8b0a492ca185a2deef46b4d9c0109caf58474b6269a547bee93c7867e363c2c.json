{"ast":null,"code":"import axios from 'axios';\nimport undirected_graph from '../undirected_graph.vue';\nexport default {\n  components: {\n    undirected_graph\n  },\n  data() {\n    return {\n      txtData: '',\n      nodes: [],\n      links: [],\n      input_start: '',\n      input_end: ''\n    };\n  },\n  methods: {\n    beforeUpload(file) {\n      // 只接受txt文件\n      const isTxt = file.type === 'text/plain';\n      if (!isTxt) {\n        this.$message.error('只能上传txt文件');\n      }\n      return isTxt;\n    },\n    handleSuccess(response, file) {\n      const graphData = response;\n      if (!graphData) {\n        // 处理 graphData 不存在的情况，比如给 nodes 和 links 赋一个空数组\n        this.nodes = [];\n        this.links = [];\n        return;\n      }\n      this.nodes = Object.values(graphData.nodes).map(node => ({\n        id: node.id,\n        name: node.name\n      }));\n      this.links = Object.values(graphData.links).map(link => ({\n        source: link.source,\n        target: link.target,\n        weight: link.weight\n      }));\n      this.txtData = \"1\";\n    },\n    handleSubmit() {\n      const data = {\n        input_start: this.input_start,\n        input_end: this.input_end\n      };\n      this.$http.post('/cmp_upload', data).then(response => {\n        // 处理响应\n        console.log(response);\n      }).catch(error => {\n        // 处理错误\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","undirected_graph","components","data","txtData","nodes","links","input_start","input_end","methods","beforeUpload","file","isTxt","type","$message","error","handleSuccess","response","graphData","Object","values","map","node","id","name","link","source","target","weight","handleSubmit","$http","post","then","console","log","catch"],"sources":["src/components/Compare/Algcmp_upload.vue"],"sourcesContent":["<template>\n    <div>\n\n        <h1>Please upload the txt file in this format</h1>\n        <h1>example</h1>\n        <p>\n          vertex a<br>\n          vertex b<br>\n          vertex c<br>\n          vertex d<br>\n          edge a b 24<br>\n          edge b d 2<br>\n          edge c b 6<br>\n          edge d c 11<br>\n          </p>\n        <el-upload\n            class=\"upload-demo\"\n            action=\"http://localhost:8088/cmp\"\n            :on-success=\"handleSuccess\"\n            :before-upload=\"beforeUpload\"\n            >\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传txt文件，且不超过500kb</div>\n        </el-upload>\n        <div v-if=\"txtData\">\n          <undirected_graph :parentHeight=\"400\" :parentWidth=\"400\" :links=\"links\" :nodes=\"nodes\"/>\n          <div>\n            <el-input v-model=\"input_start\"  placeholder=\"请输入起点\"></el-input>\n            <el-input v-model=\"input_end\" placeholder=\"请输入终点\"></el-input>\n            <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\n          </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n  import axios from 'axios';\n  import undirected_graph from '../undirected_graph.vue';\n  export default {\n    components:{\n        undirected_graph,\n      },\n    data() {\n      return {\n        txtData: '',\n        nodes: [],\n        links: [],\n        input_start: '',\n        input_end: ''\n      };\n    },\n    methods: {\n      beforeUpload(file) {\n        // 只接受txt文件\n        const isTxt = file.type === 'text/plain';\n        if (!isTxt) {\n          this.$message.error('只能上传txt文件');\n        }\n        return isTxt;\n      },\n      handleSuccess(response,file) {\n        const graphData = response;\n        if (!graphData) {\n          // 处理 graphData 不存在的情况，比如给 nodes 和 links 赋一个空数组\n          this.nodes = [];\n          this.links = [];\n          return;\n        }\n        this.nodes = Object.values(graphData.nodes).map(node => ({ id: node.id, name: node.name }));\n        this.links = Object.values(graphData.links).map(link => ({ source: link.source, target: link.target, weight: link.weight }));\n        this.txtData = \"1\";\n      },\n      handleSubmit(){\n         const data = {\n          input_start: this.input_start,\n          input_end: this.input_end\n          };\n        this.$http.post('/cmp_upload', data)\n        .then(response => {\n          // 处理响应\n          console.log(response);\n        })\n        .catch(error => {\n          // 处理错误\n          console.error(error);\n        });\n      }\n      \n    }\n  }\n</script>"],"mappings":"AAqCA,OAAAA,KAAA;AACA,OAAAC,gBAAA;AACA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,KAAA;MACAC,WAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAAC,IAAA;MACA;MACA,MAAAC,KAAA,GAAAD,IAAA,CAAAE,IAAA;MACA,KAAAD,KAAA;QACA,KAAAE,QAAA,CAAAC,KAAA;MACA;MACA,OAAAH,KAAA;IACA;IACAI,cAAAC,QAAA,EAAAN,IAAA;MACA,MAAAO,SAAA,GAAAD,QAAA;MACA,KAAAC,SAAA;QACA;QACA,KAAAb,KAAA;QACA,KAAAC,KAAA;QACA;MACA;MACA,KAAAD,KAAA,GAAAc,MAAA,CAAAC,MAAA,CAAAF,SAAA,CAAAb,KAAA,EAAAgB,GAAA,CAAAC,IAAA;QAAAC,EAAA,EAAAD,IAAA,CAAAC,EAAA;QAAAC,IAAA,EAAAF,IAAA,CAAAE;MAAA;MACA,KAAAlB,KAAA,GAAAa,MAAA,CAAAC,MAAA,CAAAF,SAAA,CAAAZ,KAAA,EAAAe,GAAA,CAAAI,IAAA;QAAAC,MAAA,EAAAD,IAAA,CAAAC,MAAA;QAAAC,MAAA,EAAAF,IAAA,CAAAE,MAAA;QAAAC,MAAA,EAAAH,IAAA,CAAAG;MAAA;MACA,KAAAxB,OAAA;IACA;IACAyB,aAAA;MACA,MAAA1B,IAAA;QACAI,WAAA,OAAAA,WAAA;QACAC,SAAA,OAAAA;MACA;MACA,KAAAsB,KAAA,CAAAC,IAAA,gBAAA5B,IAAA,EACA6B,IAAA,CAAAf,QAAA;QACA;QACAgB,OAAA,CAAAC,GAAA,CAAAjB,QAAA;MACA,GACAkB,KAAA,CAAApB,KAAA;QACA;QACAkB,OAAA,CAAAlB,KAAA,CAAAA,KAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
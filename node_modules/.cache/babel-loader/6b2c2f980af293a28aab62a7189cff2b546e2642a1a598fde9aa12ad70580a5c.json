{"ast":null,"code":"import * as d3 from \"d3\";\nexport default {\n  data() {\n    return {\n      nodes: [],\n      links: [],\n      simulation: null,\n      node: null,\n      link: null,\n      label: null\n    };\n  },\n  mounted() {\n    this.initGraph();\n  },\n  methods: {\n    initGraph() {\n      // 创建力导向布局算法\n      this.simulation = d3.forceSimulation(this.nodes).force(\"link\", d3.forceLink(this.links).id(d => d.id)).force(\"charge\", d3.forceManyBody().strength(-500)).force(\"center\", d3.forceCenter(150, 150));\n\n      // 创建SVG元素\n      const svg = d3.select(this.$refs.svg);\n\n      // 创建边\n      this.link = svg.selectAll(\"line\").data(this.links).enter().append(\"line\").attr(\"stroke\", \"#999\");\n\n      // 创建节点\n      this.node = svg.selectAll(\"circle\").data(this.nodes).enter().append(\"circle\").attr(\"r\", 20).attr(\"fill\", \"lightblue\").call(d3.drag().on(\"start\", this.dragstart).on(\"drag\", this.dragged).on(\"end\", this.dragend));\n\n      // 添加文本标签\n      this.label = svg.selectAll(null).data(this.nodes).enter().append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"dy\", \"-1.5em\").text(d => d.name);\n\n      // 将节点和边绑定到力导向布局\n      this.simulation.nodes(this.nodes).on(\"tick\", this.ticked);\n      this.simulation.force(\"link\").links(this.links);\n    },\n    ticked() {\n      this.link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      this.node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      this.label.attr(\"x\", d => d.x).attr(\"y\", d => d.y);\n    },\n    dragstart(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragged(d) {\n      d.x = d3.event.x;\n      d.y = d3.event.y;\n    },\n    dragend(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n};","map":{"version":3,"names":["d3","data","nodes","links","simulation","node","link","label","mounted","initGraph","methods","forceSimulation","force","forceLink","id","d","forceManyBody","strength","forceCenter","svg","select","$refs","selectAll","enter","append","attr","call","drag","on","dragstart","dragged","dragend","text","name","ticked","source","x","y","target","event","active","alphaTarget","restart","fx","fy"],"sources":["/Users/corzanx77/Desktop/Vue代码/router-demo/src/static/orientd.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport default {\n  data() {\n    return {\n      nodes: [],\n      links: [],\n      simulation: null,\n      node: null,\n      link: null,\n      label: null,\n    };\n  },\n  mounted() {\n    this.initGraph();\n  },\n  methods: {\n    initGraph() {\n      // 创建力导向布局算法\n      this.simulation = d3.forceSimulation(this.nodes)\n        .force(\"link\", d3.forceLink(this.links).id((d) => d.id))\n        .force(\"charge\", d3.forceManyBody().strength(-500))\n        .force(\"center\", d3.forceCenter(150, 150));\n\n      // 创建SVG元素\n      const svg = d3.select(this.$refs.svg);\n\n      // 创建边\n      this.link = svg\n        .selectAll(\"line\")\n        .data(this.links)\n        .enter()\n        .append(\"line\")\n        .attr(\"stroke\", \"#999\");\n\n      // 创建节点\n      this.node = svg\n        .selectAll(\"circle\")\n        .data(this.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"r\", 20)\n        .attr(\"fill\", \"lightblue\")\n        .call(\n          d3\n            .drag()\n            .on(\"start\", this.dragstart)\n            .on(\"drag\", this.dragged)\n            .on(\"end\", this.dragend)\n        );\n\n      // 添加文本标签\n      this.label = svg\n        .selectAll(null)\n        .data(this.nodes)\n        .enter()\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"dy\", \"-1.5em\")\n        .text((d) => d.name);\n\n      // 将节点和边绑定到力导向布局\n      this.simulation.nodes(this.nodes).on(\"tick\", this.ticked);\n      this.simulation.force(\"link\").links(this.links);\n    },\n    ticked() {\n      this.link\n        .attr(\"x1\", (d) => d.source.x)\n        .attr(\"y1\", (d) => d.source.y)\n        .attr(\"x2\", (d) => d.target.x)\n        .attr(\"y2\", (d) => d.target.y);\n      this.node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n      this.label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\n    },\n    dragstart(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragged(d) {\n      d.x = d3.event.x;\n      d.y = d3.event.y;\n    },\n    dragend(d) {\n      if (!d3.event.active) this.simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}